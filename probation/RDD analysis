```{r, include=FALSE}
library(foreign)
data_main <- read.dta("~/ECOM5002/Project/data.dta")

```

Now, we will drop data points that are not in the range

```{r, include=FALSE}
data1 <- data_main[data_main$dist_from_cut > -1.4 & data_main$dist_from_cut < 1.4, ]
```

##Frequency distribution to show continuity through the cutoff
```{r}

data1 <- data1 %>% 
  mutate(freq = 1)

# replace variable freq by quantity in each group of dist_from_cut_round10
data1A <- data1%>% 
  group_by(dist_from_cut_med10) %>% 
  mutate(freq = length(freq))
```

RDDTools
```{r}
library(dplyr)
library(rddtools)
Data1_all_rdd_same <- rdd_data(x=data1A$dist_from_cut, y=data1A$freq,cutpoint = 0) 
Data1_all_para_rdd_same <- rdd_reg_lm(rdd_object=Data1_all_rdd_same, slope = "same") 
summary(Data1_all_para_rdd_same)
rdplot(x=data1A$dist_from_cut, y=data1A$freq,  kernel = 'triangular')
```

This plot looks better:
Continuous
```{r}
data1A %>% 
  ggplot(aes(x = dist_from_cut_med10, y = freq)) + 
  geom_point() +
  geom_smooth(method = "lm", se = FALSE)+
  geom_vline(xintercept = 0) + 
  labs(y = "Frequency count", x = "GPA distance from cutoff")
```
Separate
```{r}
data1A %>% 
  ggplot(aes(x = dist_from_cut_med10, y = freq, color=data1A$dist_from_cut>0)) + 
  geom_point(aes(color=data1A$dist_from_cut>0)) +
  geom_smooth(method = "lm", se = FALSE)+
  geom_vline(xintercept = 0) + 
  labs(y = "Frequency count", x = "GPA distance from cutoff")
```


This show that there is some error in the data as there are values assigned as no probation when below the cutoff and values assigned as on probation when above the cutoff
```{r}
data1 %>% 
  ggplot(aes(x = dist_from_cut, y = probation_year1, color=data1$dist_from_cut>0)) + 
  geom_point(aes(color=data1$dist_from_cut>0)) +
  geom_smooth(method = "lm", se = FALSE)+
  geom_vline(xintercept = 0) + 
  labs(y = "On Probation (First Yr)", x = "GPA distance from cutoff")
```

Remove these points (study states it is an administrative error)
```{r eval=FALSE, include=FALSE}
clean_cut <- data1 %>% 
  filter((dist_from_cut < 0 & probation_year1 ==1)| (dist_from_cut >=0 & probation_year1 ==0) )
```

Rerun
```{r}
Data1_all_rdd_prob_cl <- rdd_data(x=clean_cut$dist_from_cut, y=clean_cut$probation_year1,cutpoint = 0) 
Data1_all_para_rdd_prob_cl <- rdd_reg_lm(rdd_object=Data1_all_rdd_prob_cl, slope = "separate") 
summary(Data1_all_para_rdd_prob_cl)
rdplot(x=clean_cut$dist_from_cut, y=clean_cut$probation_year1,  kernel = 'triangular')
```
or
```{r}
clean_cut %>% 
  ggplot(aes(x = dist_from_cut, y = probation_year1, color=clean_cut$dist_from_cut>=0)) + 
  geom_point(aes(color=clean_cut$dist_from_cut>=0)) +
  geom_smooth(method = "lm", se = FALSE)+
  geom_vline(xintercept = 0) + 
  labs(y = "On Probation (First Yr)", x = "GPA distance from cutoff")
```



