install.packages("waffle")
library(wafle)
library(waffle)
library(ggplot2)
install.packages('ellipsis')
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
planetData <- read.csv('phl_exoplanet_catalog.csv')
planetData[planetData == ""] <- NA
missingData <- is.na(planetData)
missingDataAverage <- colMeans(missingData)
planetData <- planetData[, missingDataAverage < 0.4]
rm(missingData)
rm(missingDataAverage)
library(dplyr)
planetData <- mutate_if(planetData, is.character, as.factor)
library(missForest)
planetData <- subset(planetData, select = -c(P_NAME, P_UPDATED, S_NAME, S_ALT_NAMES, S_CONSTELLATION, S_CONSTELLATION_ABR, S_CONSTELLATION_ENG, S_DEC_T, S_RA_T))
planetData$S_TIDAL_LOCK <- as.numeric(planetData$S_TIDAL_LOCK)
planetData.imp <- missForest(planetData)
planetData <- planetData.imp$ximp
names(planetData)
names(planetData) == "P_STATUS"
a = c(2, 3, 4)
a
a[which(TRUE, FALSE, TRUE)]
library(leaps)
install.packages("leaps")
library(leaps)
help("regsubsets")
help("step")
require(car)
require(rgl)
require(lattice)
require(leaps)
install.packages(c("rgl", "car", "leaps", "step", "regsubsets", "lattice"))
install.packages(c("rgl", "car", "leaps", "step", "regsubsets", "lattice"))
require(car)
require(rgl)
require(lattice)
require(leaps)
g = c(2, 3, 4, 2, 5, 2, 5, 5, 4, 1, 2, 4, 5, 3, 2, 5, 2, 5)
m<-mean(g)
std<-sqrt(var(g))
hist(g, density=20, breaks=20, prob=TRUE,
xlab="x-variable", ylim=c(0, 2),
main="normal curve over histogram")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
g = c(2, 3, 4, 2, 5, 2, 5, 5, 4, 1, 2, 4, 5, 3, 2, 5, 2, 2, 1, 3, 2, 4, 4, 4, 4, 4)
hist(g, density=20, breaks=20, prob=TRUE,
xlab="x-variable", ylim=c(0, 2),
main="normal curve over histogram")
curve(dnorm(x, mean=mean(g), sd=sd(g)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
g = c(2, 3, 4, 2, 5, 2, 5, 5, 4, 1, 2, 4, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 5, 2, 2, 1, 3, 2, 4, 4, 4, 4, 4)
hist(g, density=20, breaks=20, prob=TRUE,
xlab="x-variable", ylim=c(0, 2),
main="normal curve over histogram")
curve(dnorm(x, mean=mean(g), sd=sd(g)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
g = c(2, 3, 4, 2, 5, 2, 5, 5, 4, 1, 2, 4, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 5, 2, 2, 1, 3, 2, 4, 4, 4, 4, 4)
hist(g, density=20, breaks=20, prob=TRUE,
xlab="x-variable", ylim=c(0, 2),
main="normal curve over histogram")
curve(dnorm(x, mean=mean(g), sd=sd(g)),
col="blacks", lwd=2, add=TRUE, yaxt="n")
g = c(2, 3, 4, 2, 5, 2, 5, 5, 4, 1, 2, 4, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 5, 2, 2, 1, 3, 2, 4, 4, 4, 4, 4)
hist(g, density=20, breaks=20, prob=TRUE,
xlab="x-variable", ylim=c(0, 2),
main="normal curve over histogram")
curve(dnorm(x, mean=mean(g), sd=sd(g)),
col="black", lwd=2, add=TRUE, yaxt="n")
g = c(2, 3, 4, 2, 5, 2, 5, 5, 4, 1, 2, 4, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 5, 2, 2, 1, 3, 2, 4, 4, 4, 4, 4)
hist(g, density=20, breaks=20, prob=FALSE,
xlab="x-variable", ylim=c(0, 2),
main="normal curve over histogram")
curve(dnorm(x, mean=mean(g), sd=sd(g)),
col="black", lwd=2, add=TRUE, yaxt="n")
install.packages('caret')
require(caret)
a = c(1:20)
a
a = a*a
a
sum(a)
a = 3*sum(a)
a
a + 420
setwd("~/Desktop/BQT/probation")
install.packages('foreign')
library(foreign)
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
data <- read.dta("data.dta")
View(data)
mean(data$hsgrade_pct)
data <- data[df$dist_from_cut > -1.4 & df$dist_from_cut < 1.4]
data <- data[data$dist_from_cut > -1.4 & data$dist_from_cut < 1.4]
data$dist_from_cut
data <- data[data$dist_from_cut > -1.4 & data$dist_from_cut < 1.4]
data$dist_from_cut > -1.4
data$dist_from_cut > -1.4 & data$dist_from_cut < 1.4
sum(data$dist_from_cut > -1.4 & data$dist_from_cut < 1.4)
sum(data$dist_from_cut >= -1.4 & data$dist_from_cut <= 1.4)
sum(data$dist_from_cut => -1.4 & data$dist_from_cut <= 1.4)
sum(data$dist_from_cut == 1.4)
sum(data$dist_from_cut == -1.4)
data[data$dist_from_cut => -1.4 & data$dist_from_cut <= 1.4]
data[data$dist_from_cut >= -1.4 & data$dist_from_cut <= 1.4]
data[data$dist_from_cut >= -1.4]
knitr::opts_chunk$set(echo = TRUE)
library(sandwich)
library(lmtest)
model = lm(age_at_entry ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data14)
library(sandwich)
library(lmtest)
model = lm(age_at_entry ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data1)
library(foreign)
data <- read.dta("data.dta")
data1 <- data[data$dist_from_cut > -0.6 & data$dist_from_cut < 0.6, ]
library(qwraps2)
descriptive_summary <- list("Characterisitcs" = list('High School Grade Percentile' =~ qwraps2::mean_sd(hsgrade_pct),
'Credits Attempted in First Year' =~ qwraps2::mean_sd(totcredits_year1),
'Age at entry' =~ qwraps2::mean_sd(age_at_entry),
'male' =~ qwraps2::mean_sd(male),
'English is First Language' =~ qwraps2::mean_sd(english),
'Born in North America' =~ qwraps2::mean_sd(bpl_north_america),
'At Campus 1' =~ qwraps2::mean_sd(loc_campus1),
'At Campus 2' =~ qwraps2::mean_sd(loc_campus2),
'At Campus 3' =~ qwraps2::mean_sd(loc_campus3)),
"Outcomes" = list('Distance from Cutoff in 1st Year' =~ qwraps2::mean_sd(dist_from_cut),
'On Probation After 1st Year' =~ qwraps2::mean_sd(probation_year1),
'Ever on Academic Probation' =~ qwraps2::mean_sd(probation_ever),
'Left University after 1st Evaluation' =~ qwraps2::mean_sd(left_school),
'Distance from Cutoff Next Evaluation' =~ qwraps2::mean_sd(nextGPA, na_rm = TRUE, show_n = 'never'),
'Ever Suspended' =~ qwraps2::mean_sd(suspended_ever, na_rm = TRUE, show_n = 'never'),
'Graduated by Year 4' =~ qwraps2::mean_sd(gradin4, na_rm = TRUE, show_n = 'never'),
'Graduated by Year 5' =~ qwraps2::mean_sd(gradin5, na_rm = TRUE, show_n = 'never'),
'Graduated by Year 6' =~ qwraps2::mean_sd(gradin6, na_rm = TRUE, show_n = 'never')))
options(qwraps2_markup = "markdown")
table1 = summary_table(data1, descriptive_summary)
library(sandwich)
library(lmtest)
model = lm(age_at_entry ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data1)
a = coeftest(model, vcov = vcovCL, cluster = data1$clustervar)
ans = matrix(c(a[2,1], a[2, 4], a[2, 2], a[1, 1], a[1, 4], a[1, 2]), nrow = 1, ncol = 6)
colnames(ans) = c('gpa below cutoff 1', 'p-value 1', 'sd-error 1', 'intercept 0', 'p value 0', 'sd-error 1')
ans
library(sandwich)
library(lmtest)
p=as.name('age_at_entry)
model = lm(age_at_entry ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data1)
a = coeftest(model, vcov = vcovCL, cluster = data1$clustervar)
ans = matrix(c(a[2,1], a[2, 4], a[2, 2], a[1, 1], a[1, 4], a[1, 2]), nrow = 1, ncol = 6)
colnames(ans) = c('gpa below cutoff 1', 'p-value 1', 'sd-error 1', 'intercept 0', 'p value 0', 'sd-error 1')
library(sandwich)
library(lmtest)
p=as.name('age_at_entry')
model = lm(age_at_entry ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data1)
a = coeftest(model, vcov = vcovCL, cluster = data1$clustervar)
ans = matrix(c(a[2,1], a[2, 4], a[2, 2], a[1, 1], a[1, 4], a[1, 2]), nrow = 1, ncol = 6)
colnames(ans) = c('gpa below cutoff 1', 'p-value 1', 'sd-error 1', 'intercept 0', 'p value 0', 'sd-error 1')
ans
p
age_at_entry
library(sandwich)
library(lmtest)
p=('age_at_entry')
model = lm(data1[p] ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data1)
library(sandwich)
library(lmtest)
p='age_at_entry'
model = lm(data1[p] ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data1)
library(sandwich)
library(lmtest)
model = lm(data1['age_at_entry] ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data1)
a = coeftest(model, vcov = vcovCL, cluster = data1$clustervar)
ans = matrix(c(a[2,1], a[2, 4], a[2, 2], a[1, 1], a[1, 4], a[1, 2]), nrow = 1, ncol = 6)
colnames(ans) = c('gpa below cutoff 1', 'p-value 1', 'sd-error 1', 'intercept 0', 'p value 0', 'sd-error 1')
library(sandwich)
library(lmtest)
model = lm(data1['age_at_entry'] ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data1)
library(sandwich)
library(lmtest)
library(dplyr)
p ='age_at_entry'
model = lm(select(data1, p) ~ gpalscutoff + gpaXgpalscutoff + gpaXgpagrcutoff, data = data1)
select(data1, p)
dim(select(data1, p))
